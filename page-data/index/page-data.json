{"componentChunkName":"component---gatsby-theme-mdx-deck-src-templates-deck-js","path":"/","matchPath":"/*","webpackCompilationHash":"d3ce856e29ca40f78303","result":{"data":{"deck":{"id":"64b1b195-1031-5e02-8e16-8f82ac5236db","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar themes = [highlight];\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  themes: themes,\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(Head, {\n    mdxType: \"Head\"\n  }, mdx(\"title\", null, \"Unbreakable apps with ECMAScript 2077\"), mdx(\"meta\", {\n    name: \"twitter:card\",\n    content: \"summary_large_image\"\n  }), mdx(\"meta\", {\n    name: \"twitter:site\",\n    content: \"@fakenickels\"\n  }), mdx(\"meta\", {\n    name: \"twitter:title\",\n    content: \"ReasonML, ES2077\"\n  }), mdx(\"meta\", {\n    name: \"twitter:description\",\n    content: \"Unbreakable apps with ECMAScript 2077\"\n  })), mdx(\"h2\", null, \"Incoming from the future\"), mdx(\"hr\", null), mdx(Title, {\n    glitchText1: \"ES2077\",\n    variant: \"featured\",\n    mdxType: \"Title\"\n  }, \"ReasonML\"), mdx(\"hr\", null), mdx(SplitLayout, {\n    mdxType: \"SplitLayout\"\n  }, mdx(GlitchImage, {\n    src: glitchBust,\n    mdxType: \"GlitchImage\"\n  }), mdx(\"div\", {\n    style: {\n      textAlign: 'center'\n    }\n  }, mdx(\"h2\", null, \"Gabriel R. Abreu\"), mdx(\"p\", null, \"Astrocoders\"), mdx(\"p\", null, \"CTO Founder\"), mdx(\"p\", null, \"Father\"), mdx(\"p\", null, \"Bad Jokes Engineer\"), mdx(\"p\", null, \"Creator of Epitath (hooks prior art)\"), mdx(\"p\", null, \"and ReForm\"))), mdx(\"hr\", null), mdx(Title, {\n    variant: \"featured\",\n    mdxType: \"Title\"\n  }, \"@fakenickels\"), mdx(\"p\", null, \"Twitter, GitHub, Reddit, Instagram \"), mdx(\"hr\", null), mdx(SplitLayout, {\n    mdxType: \"SplitLayout\"\n  }, mdx(\"div\", {\n    style: {\n      width: '100%',\n      height: '100%',\n      padding: '30px',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center'\n    }\n  }, mdx(QRCode, {\n    size: \"300\",\n    value: \"https://github.com/fakenickels/es2077-reactconf\",\n    mdxType: \"QRCode\"\n  })), mdx(Title, {\n    mdxType: \"Title\"\n  }, \"Slides\")), mdx(\"hr\", null), mdx(Title, {\n    mdxType: \"Title\"\n  }, \"What's ReasonML?\"), mdx(\"ul\", null, mdx(\"li\", null, \"Yet Another Awesome Tool Created by Facebook\"), mdx(Appear, {\n    mdxType: \"Appear\"\n  }, mdx(\"li\", null, \"Envisioned by React creator Jordan Walke\"), mdx(\"li\", null, \"Think of it as an syntax/dialect for OCaml\"), mdx(\"li\", null, \"OCaml is a super fast, type inferred, highly hackable FP language\"))), mdx(\"hr\", null), mdx(SplitLayout, {\n    mdxType: \"SplitLayout\"\n  }, mdx(ImageFit, {\n    src: stinks,\n    mdxType: \"ImageFit\"\n  }), mdx(\"h1\", null, \"Put types in JS\")), mdx(\"hr\", null), mdx(SplitLayout, {\n    mdxType: \"SplitLayout\"\n  }, mdx(ImageFit, {\n    src: stonks,\n    mdxType: \"ImageFit\"\n  }), mdx(\"h1\", null, \"Put JS in types\")), mdx(\"hr\", null), mdx(SplitLayout, {\n    mdxType: \"SplitLayout\"\n  }, mdx(Image, {\n    src: glitchUnbreakableImage,\n    mdxType: \"Image\"\n  }), mdx(Title, {\n    mdxType: \"Title\"\n  }, \"How unbreakable?\")), mdx(\"hr\", null), mdx(\"h1\", null, \"Let's get philosophical\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"\\\"Philosophically speaking, a problem is composed of many possible branches/conditions. Mishandling these conditions is the majority of what we call bugs.\\\"\")), mdx(\"hr\", null), mdx(\"h1\", null, \"Let's get philosophical\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"\\\"A type system doesn't magically eliminate bugs; it points out the unhandled conditions and asks you to cover them\\\"\")), mdx(\"hr\", null), mdx(CodeSurfer, {\n    code: variantSnippet,\n    language: \"reason\",\n    highlights: [[1, 1], [4, 4], [4, 9]],\n    mdxType: \"CodeSurfer\"\n  }), mdx(\"hr\", null), mdx(SplitLayout, {\n    mdxType: \"SplitLayout\"\n  }, mdx(GlitchImage, {\n    src: glitchContrastImage,\n    mdxType: \"GlitchImage\"\n  }), mdx(\"div\", null, mdx(Title, {\n    mdxType: \"Title\"\n  }, \"Contrast\"), mdx(Paragraph, {\n    mdxType: \"Paragraph\"\n  }, \"with TypeScript\"))), mdx(\"hr\", null), mdx(\"h1\", null, \"Types\"), mdx(CodeSurfer, {\n    code: variantTypesTsSnippet,\n    language: \"typescript\",\n    highlights: [[1, 5], [7, 10]],\n    mdxType: \"CodeSurfer\"\n  }), mdx(\"hr\", null), mdx(\"h1\", null, \"Pattern matching?\"), mdx(CodeSurfer, {\n    code: variantSwitchTsSnippet,\n    language: \"typescript\",\n    highlights: [[1, 1], [2, 10], [3, 3], [7, 9]],\n    mdxType: \"CodeSurfer\"\n  }), mdx(\"hr\", null), mdx(\"h1\", null, \"Not your grandma!\"), mdx(\"div\", {\n    style: {\n      textAlign: 'center'\n    }\n  }, mdx(Paragraph, {\n    mdxType: \"Paragraph\"\n  }, \"Reason's type system is not just a powerful linter. You use it to model your program from top to bottom.\")), mdx(\"hr\", null), mdx(\"h1\", null, \"ReasonML \\u2764\\uFE0F  React\"), mdx(\"hr\", null), mdx(\"h1\", null, \"React demo\"), mdx(CodeSurfer, {\n    code: patternMatchingDemoReason,\n    language: \"reason\",\n    highlights: [[1, 2], [6, 6], [6, 13], [9, 9], [10, 10], [12, 12]],\n    mdxType: \"CodeSurfer\"\n  }), mdx(\"hr\", null), mdx(\"h1\", null, \"TS version\"), mdx(CodeSurfer, {\n    code: patternMatchingDemoTS,\n    language: \"jsx\",\n    highlights: [[3, 12], [14, 14], [15, 22]],\n    mdxType: \"CodeSurfer\"\n  }), mdx(\"hr\", null), mdx(\"h1\", null, \"TS version\"), mdx(CodeSurfer, {\n    code: patternMatchingDemoTS2,\n    language: \"typescript\",\n    highlights: [[18, 18]],\n    mdxType: \"CodeSurfer\"\n  }), mdx(\"hr\", null), mdx(\"h1\", null, \"TS version\"), mdx(CodeSurfer, {\n    code: patternMatchingDemoTS3,\n    language: \"typescript\",\n    highlights: [[17, 17]],\n    mdxType: \"CodeSurfer\"\n  }), mdx(\"hr\", null), mdx(\"h1\", null, \"ReasonML\"), mdx(CodeSurfer, {\n    code: patternMatchingDemoReasonError,\n    language: \"reason\",\n    highlights: [[7, 13], [6, 6]],\n    mdxType: \"CodeSurfer\"\n  }), mdx(\"hr\", null), mdx(SplitLayout, {\n    mdxType: \"SplitLayout\"\n  }, mdx(GlitchImage, {\n    src: glitchPerspectiveImage,\n    mdxType: \"GlitchImage\"\n  }), mdx(Title, {\n    mdxType: \"Title\"\n  }, \"Statically known types\")), mdx(\"hr\", null), mdx(Title, {\n    variant: \"featured\",\n    mdxType: \"Title\"\n  }, \"GraphQL\"), mdx(\"hr\", null), mdx(\"h1\", null, \"GraphQL\"), mdx(CodeSurfer, {\n    code: graphQLDemo,\n    language: \"reason\",\n    highlights: [[1, 1], [9, 9]],\n    mdxType: \"CodeSurfer\"\n  }), mdx(\"hr\", null), mdx(\"h1\", null, \"ReasonML\"), mdx(CodeSurfer, {\n    code: graphQLDemoReason,\n    language: \"reason\",\n    highlights: [[1, 8], [1, 1], [12, 12], [14, 27], [16, 24], [18, 24], [19, 22]],\n    mdxType: \"CodeSurfer\"\n  }), mdx(\"hr\", null), mdx(Title, {\n    variant: \"featured\",\n    mdxType: \"Title\"\n  }, \"This is less tests\"), mdx(\"hr\", null), mdx(Title, {\n    variant: \"featured\",\n    mdxType: \"Title\"\n  }, \"This is less bugs to production\"), mdx(\"hr\", null), mdx(Title, {\n    variant: \"featured\",\n    mdxType: \"Title\"\n  }, \"This is the future\"), mdx(\"hr\", null), mdx(\"h1\", null, \"Shared ecosystem\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"ReasonML brings together the OCaml community and the JS community\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"OCaml brings the safety and robustness the web needs\")), mdx(\"hr\", null), mdx(\"h1\", null, \"JS Shared ecosystem\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Install it with \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"npm i --global bs-platform\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Or with a starter \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"bsb -init demo\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Or with a React starter \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"bsb -init demo -theme react-hooks\"))), mdx(\"hr\", null), mdx(\"h1\", null, \"Native ecosystem\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Install it with \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"npm i --global esy pesy\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Or with a starter \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"mkdir demo && cd demo && pesy\"))), mdx(\"hr\", null), mdx(SplitLayout, {\n    mdxType: \"SplitLayout\"\n  }, mdx(GlitchImage, {\n    src: glitchPerspectiveImage,\n    mdxType: \"GlitchImage\"\n  }), mdx(Title, {\n    mdxType: \"Title\"\n  }, \"ReasonML toolchain\")), mdx(\"hr\", null), mdx(\"img\", {\n    src: reasonmlToolchain\n  }), mdx(\"hr\", null), mdx(\"h1\", null, \"Tools of the ecosystem\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"BuckleScript\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"esy.sh\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Revery\")), mdx(\"hr\", null), mdx(Title, {\n    mdxType: \"Title\"\n  }, \"BuckleScript\"), mdx(\"ul\", null, mdx(\"li\", null, \"Created by Bloomberg as a better alternative to js_of_ocaml\"), mdx(Appear, {\n    mdxType: \"Appear\"\n  }, mdx(\"li\", null, \"Powered by the ninja compiler, insane compile time\"), mdx(\"li\", null, \"Readable output\"))), mdx(\"hr\", null), mdx(Title, {\n    mdxType: \"Title\"\n  }, \"esy.sh\"), mdx(\"ul\", null, mdx(\"li\", null, \"Brings npm concepts for OCaml ecosystem and package manager (OPAM)\"), mdx(Appear, {\n    mdxType: \"Appear\"\n  }, mdx(\"li\", null, \"Created also by Jordan Walke\"), mdx(\"li\", null, \"Easiness to create pre-compiled and multiplatform programs\"), mdx(\"li\", null, \"Created with esy:\"))), mdx(\"hr\", null), mdx(SplitLayout, {\n    mdxType: \"SplitLayout\"\n  }, mdx(ImageFit, {\n    src: fnmImage,\n    mdxType: \"ImageFit\"\n  }), mdx(\"div\", null, mdx(Title, {\n    mdxType: \"Title\"\n  }, \"fnm\"), \"Fast and simple Node.js version manager, built in native ReasonML\")), mdx(\"hr\", null), mdx(SplitLayout, {\n    mdxType: \"SplitLayout\"\n  }, mdx(ImageFit, {\n    src: reveryImage,\n    mdxType: \"ImageFit\"\n  }), mdx(\"div\", {\n    style: {\n      textAlign: 'center'\n    }\n  }, mdx(Title, {\n    mdxType: \"Title\"\n  }, \"Revery\"), \"Build native, high-performance, cross-platform desktop apps with Reason!\")), mdx(\"hr\", null), mdx(SplitLayout, {\n    mdxType: \"SplitLayout\"\n  }, mdx(GlitchImage, {\n    src: glitchUnsettlingImage,\n    mdxType: \"GlitchImage\"\n  }), mdx(Title, {\n    mdxType: \"Title\"\n  }, \"Unsettling\")), mdx(\"hr\", null), mdx(Title, {\n    mdxType: \"Title\"\n  }, \"Problems\"), mdx(\"div\", {\n    style: {\n      padding: '40px'\n    }\n  }, mdx(\"ul\", null, mdx(\"li\", null, \"Mindset change\"), mdx(Appear, {\n    mdxType: \"Appear\"\n  }, mdx(\"li\", null, \"Syntax errors\"), mdx(\"li\", null, \"Docs are sparse sometimes\"), mdx(\"li\", null, \"Community is growing at a fast pace, but you may still not find everything you need\")))), mdx(\"hr\", null), mdx(SplitLayout, {\n    mdxType: \"SplitLayout\"\n  }, mdx(\"div\", {\n    style: {\n      width: '100%',\n      height: '100%',\n      padding: '30px',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center'\n    }\n  }, mdx(QRCode, {\n    size: \"300\",\n    value: \"https://discord.gg/reasonml\",\n    mdxType: \"QRCode\"\n  })), mdx(\"div\", null, mdx(Title, {\n    mdxType: \"Title\"\n  }, \"discord.gg/reasonml\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"<Paragraph>\\n  I just heard about Reason at ReactConf Brazil!\\n</Paragraph>\\n\")))), mdx(\"hr\", null), mdx(SplitLayout, {\n    mdxType: \"SplitLayout\"\n  }, mdx(\"div\", {\n    style: {\n      width: '100%',\n      height: '100%',\n      padding: '30px',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center'\n    }\n  }, mdx(ImageFit, {\n    src: astrocodersImage,\n    mdxType: \"ImageFit\"\n  })), mdx(\"div\", null, mdx(Title, {\n    mdxType: \"Title\"\n  }, \"Astrocoders\"), mdx(\"ul\", null, mdx(\"li\", null, \"https://vannamei.com.br\"), mdx(\"li\", null, \"https://astrocoders.com\"), mdx(\"li\", null, \"https://github.com/Astrocoders\"), mdx(\"li\", null, \"https://github.com/Astrocoders/fullstack-challenge\")))), mdx(\"hr\", null), mdx(SplitLayout, {\n    mdxType: \"SplitLayout\"\n  }, mdx(VideoBackground, {\n    src: glitchFacesVideo,\n    mdxType: \"VideoBackground\"\n  }), mdx(\"div\", null, mdx(Title, {\n    mdxType: \"Title\"\n  }, \"Thank you!\"), mdx(Title, {\n    mdxType: \"Title\"\n  }, \"Obrigado!\"), mdx(Title, {\n    mdxType: \"Title\"\n  }, \"\\u8B1D\\u8B1D\\uFF01\"))), mdx(\"hr\", null), mdx(SplitLayout, {\n    mdxType: \"SplitLayout\"\n  }, mdx(GlitchImage, {\n    src: glitchPerspectiveImage,\n    mdxType: \"GlitchImage\"\n  }), mdx(Title, {\n    mdxType: \"Title\"\n  }, \"Questions?\")));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"matchPath":"/*","isCreatedByStatefulCreatePages":false,"id":"64b1b195-1031-5e02-8e16-8f82ac5236db","slug":"","title":"Incoming from the future"}}}